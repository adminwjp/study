<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link rel="icon" href="/favicon.ico">
    <title>管理员列表</title>
    <!-- 引入样式 -->
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <style>

        .demo-form-inline {
            margin: 0px 70px;
            text-align: left;
        }

        .el-table td, .el-table th {
            text-align: center !important;
        }

        .avatar-uploader .el-upload {
            border: 1px dashed #d9d9d9;
            border-radius: 6px;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

            .avatar-uploader .el-upload:hover {
                border-color: #409EFF;
            }

        .avatar-uploader-icon {
            font-size: 28px;
            color: #8c939d;
            width: 178px;
            height: 178px;
            line-height: 178px;
            text-align: center;
        }
        .avatar {
            width: 178px;
            height: 178px;
            display: block;
        }
    </style>
</head>
<body>
    <div class="admin_list">

        <!-- 开始查询信息 -->
        <el-form :inline="true" :model="formQuery" ref="formQuery" class="demo-form-inline ">
            <el-form-item label="编号" prop="id">
                <el-select v-model="formQuery.id" placeholder="请选择" @@change="handleCategoryQueryChangeEvent" @@visible-change="handleCategoryQueryVisableChangeEvent">
                    <el-option v-for="it in options" :key="it.id" :label="it.category" :value="it.id">
                    </el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="Token" prop="token">
                <el-input v-model="formQuery.token" placeholder="Token"></el-input>
            </el-form-item>
            <el-form-item label="账户" prop="account">
                <el-input v-model="formQuery.account" placeholder="账户"></el-input>
            </el-form-item>
            <el-form-item label="昵称" prop="nick_name">
                <el-input v-model="formQuery.nick_name" placeholder="昵称"></el-input>
            </el-form-item>
            <el-form-item label="出生日期范围" prop="birthday_date">
                <el-date-picker v-model="formQuery.birthday_date" type="datetimerange" value-format="yyyy-MM-dd" :picker-options="createDatePickerOptions"
                                range-separator="至" start-placeholder="开始日期" align="right">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="角色" prop="role_id">
                <el-cascader v-model="formQuery.role_id" placeholder="角色分类" ref="refHandleQuery"
                             :options="role_options"
                             :props="{  checkStrictly: true,expandTrigger: 'hover' }"
                             @@change="handleRoleQueryChangeEvent" @@visible-change="handleRoleVisableChangeEvent" clearable>
                    <template slot-scope="{ node, data }">
                        <span style="float: left" @@click="handleRoleQueryClickEvent(data.value)">{{ data.label }}</span>
                        <span v-if="!node.isLeaf"> ({{ data.children.length }}) </span>
                    </template>
                </el-cascader>
            </el-form-item>

            <el-form-item label="真实姓名" prop="real_name">
                <el-input v-model="formQuery.real_name" placeholder="真实姓名"></el-input>
            </el-form-item>

            <el-form-item label="手机号" prop="phone">
                <el-input v-model="formQuery.phone" placeholder="手机号"></el-input>
            </el-form-item>
            <el-form-item label="性别" prop="sex">
                <el-select v-model="formQuery.sex" placeholder="性别">
                    <el-option label="男" value="男"></el-option>
                    <el-option label="女" value="女"></el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="邮箱" prop="email">
                <el-input v-model="formQuery.email" placeholder="邮箱"></el-input>
            </el-form-item>
            <el-form-item label="登录时间范围" prop="login_date">
                <el-date-picker v-model="formQuery.login_date" type="datetimerange" value-format="yyyy-MM-dd HH:mm:ss" :picker-options="createDatePickerOptions"
                                range-separator="至" start-placeholder="开始日期" align="right">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="创建时间范围" prop="create_date">
                <el-date-picker v-model="formQuery.create_date" type="datetimerange" value-format="yyyy-MM-dd HH:mm:ss" :picker-options="createDatePickerOptions"
                                range-separator="至" start-placeholder="开始日期" align="right">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="修改时间范围" prop="update_date">
                <el-date-picker v-model="formQuery.update_date" type="datetimerange" value-format="yyyy-MM-dd HH:mm:ss" :picker-options="createDatePickerOptions" range-separator="至" start-placeholder="开始日期"
                                end-placeholder="结束日期" align="right">
                </el-date-picker>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" @@click="loadTableDataOrQueryDataEvent">查询</el-button>
                <el-button @@click="resetFormEvent('formQuery')">重置</el-button>
            </el-form-item>
        </el-form>
        <!-- 结束查询信息 -->
        <!-- 开始 操作按钮 -->
        <div style="margin-top: 20px;text-align:left;margin-bottom:10px">
            <el-button @@click="toggleSelectionTableCheckBoxButtonEvent(checkboxAllSelect?tableData:null)">{{checkboxAllSelectText}}</el-button>
            <el-button @@click="insertButtonClickEvent" v-if="operator.add" icon="el-icon-plus">添加</el-button>
            <el-button @@click="modifyButtonClickEvent" v-if="operator.modify" icon="el-icon-edit">编辑</el-button>
            <el-button @@click="deleteButtonClickEvent" v-if="operator.delete" icon="el-icon-delete">删除</el-button>
            <el-button @@click="queryButtonClickEvent" icon="el-icon-view">查看</el-button>
            <el-button @@click="loadTableDataOrQueryDataEvent" icon="el-icon-refresh">刷新</el-button>
        </div>
        <!-- 结束 操作按钮 -->
        <!-- 开始 列表信息 -->
        <el-table v-loading="loading" element-loading-spinner="el-icon-loading"
                  element-loading-background="rgba(0, 0, 0, 0.8)" ref="multipleTable"
                  :data="tableData" tooltip-effect="dark" style="width: 100%"
                  highlight-current-row row-key="id" border
                  @@selection-change="handleSelectionChange"
                  :default-sort="{prop: 'create_date', order: 'descending'}" :tree-props="{children: 'children', hasChildren: 'hasChildren'}">
            <el-table-column type="selection" width="55" align="center"> </el-table-column>
            <el-table-column type="index" width="50" sortable label="序号" align="center"> </el-table-column>
            <el-table-column prop="id" label="编号" sortable width="50" align="center">  </el-table-column>
            <el-table-column prop="account" label="账户" width="120" align="center">  </el-table-column>
            <el-table-column prop="password" label="密码" width="120" align="center"> </el-table-column>
            <el-table-column prop="nick_name" label="昵称" width="70" align="center"> </el-table-column>
            <el-table-column prop="role" label="角色信息" align="center">
                <el-table-column prop="role.id" label="角色编号" width="80" align="center"> </el-table-column>
                <el-table-column prop="role.category" label="角色名称" width="80" align="center"> </el-table-column>
            </el-table-column>
            <el-table-column prop="login_date" label="登录时间" sortable width="100" align="center">
                <template slot-scope="scope">
                    <i class="el-icon-time"></i>
                    <span style="margin-left: 10px">{{ scope.row.login_date }}</span>
                </template>
            </el-table-column>
            <el-table-column prop="token" label="Token" width="100" align="center"> </el-table-column>
            <el-table-column prop="express_in" label="Token失效时间(单位：秒)" width="150" align="center"> </el-table-column>
            <el-table-column prop="real_name" label="真实姓名" width="70" align="center"> </el-table-column>
            <el-table-column prop="head_pic" label="头像" width="200" align="center">
                <template slot-scope="scope">
                    <img v-if="scope.row.head_pic" :src="baseUrl+'img/'+scope.row.head_pic" align="middle" class="avatar">
                    <img v-else src="https://cube.elemecdn.com/e/fd/0fc7d20532fdaf769a25683617711png.png" class="avatar" />
                </template>
            </el-table-column>
            <el-table-column prop="birthday" label="出生日期" sortable width="100" align="center">
                <template slot-scope="scope">
                    <i class="el-icon-time"></i>
                    <span style="margin-left: 10px">{{ scope.row.birthday }}</span>
                </template>
            </el-table-column>
            <el-table-column prop="phone" label="手机号" width="100" align="center"> </el-table-column>
            <el-table-column prop="sex" label="性别" width="70" align="center"> </el-table-column>
            <el-table-column prop="description" label="描述" width="100" align="center"> </el-table-column>
            <el-table-column prop="email" label="邮箱" width="100" align="center"> </el-table-column>
            <el-table-column prop="create_date" label="创建日期" align="center" sortable width="200">
                <template slot-scope="scope">
                    <i class="el-icon-time"></i>
                    <span style="margin-left: 10px">{{ scope.row.create_date }}</span>
                </template>
            </el-table-column>
            <el-table-column prop="update_date" label="修改日期" align="center" sortable width="200">
                <template slot-scope="scope">
                    <i class="el-icon-time"></i>
                    <span style="margin-left: 10px">{{ scope.row.update_date }}</span>
                </template>
            </el-table-column>
            <el-table-column @*fixed="right"*@ label="操作" width="100" align="center">
                <template slot-scope="scope">
                    <el-button @@click="handleSelectClickEvent(scope.row)" type="text" icon="el-icon-view" size="small">查看</el-button>
                    <el-button type="text" @@click="handleModifyClickEvent(scope.row)" v-if="operator.modify" icon="el-icon-edit" size="small">编辑</el-button>
                    <el-button type="text" @@click="handleDeleteClickEvent(scope.row)" v-if="operator.delete" icon="el-icon-delete" size="small">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
        <!-- 结束 列表信息 -->
        <!-- 开始 分页 -->
        <div class="block" style="text-align:center;">
            <el-pagination background @@size-change="handleSizeChangeEvent" @@current-change="handleCurrentPageChangeEvent" :current-page="page.current_page"
                           :page-sizes="page.sizes" :page-size="page.size" :page-count="page.page" layout="total, sizes, prev, pager, next, jumper" :total="page.total">
            </el-pagination>
        </div>
        <!-- 结束 分页 -->
        <!-- 开始 添加 修改 -->
        <el-dialog :title="dialog.title" :visible.sync="dialog.visible" width="30%" :before-close="handleDialogClose">
            <el-radio-group v-model="labelPosition" size="small">
                <el-radio-button label="left">左对齐</el-radio-button>
                <el-radio-button label="right">右对齐</el-radio-button>
                <el-radio-button label="top">顶部对齐</el-radio-button>
            </el-radio-group>
            <div style="margin: 20px;"></div>
            <el-form :model="formSubmit" status-icon :rules="formRoleValidator" ref="formSubmit" enctype="multipart/form-data" :disabled="disabled" class="demo-ruleForm" :label-position="labelPosition" label-width="80px">
                <el-input type="hidden" v-model="formSubmit.id"></el-input>
                <el-form-item label="账户" prop="account">
                    <el-input v-model="formSubmit.account" :disabled="account_disabled"></el-input>
                </el-form-item>
                <el-form-item label="昵称" prop="nick_name">
                    <el-input v-model="formSubmit.nick_name"></el-input>
                </el-form-item>
                <el-form-item label="角色" prop="role.id">
                    <el-cascader v-model="formSubmit.role.id" placeholder="角色分类" ref="refHandleForm"
                                 :options="role_options"
                                 :props="{  checkStrictly: true,expandTrigger: 'hover' }"
                                 @@change="handleRoleFormChangeEvent" @@visible-change="handleRoleVisableChangeEvent" clearable>
                        <template slot-scope="{ node, data }">
                            <span style="float: left" @@click="handleRoleFormClickEvent(data.value)">{{ data.label }}</span>
                            <span v-if="!node.isLeaf"> ({{ data.children.length }}) </span>
                        </template>
                    </el-cascader>
                </el-form-item>
                <el-form-item label="姓名" prop="real_name">
                    <el-input v-model="formSubmit.real_name"></el-input>
                </el-form-item>
                <el-form-item label="头像" prop="head_pic">
                    <el-upload class="avatar-uploader" accept="image/jpeg,image/jpg,image/png,image/gif" ref="upload"
                               :action="submit_url" :data="formSubmit" name="head_pic"
                               :show-file-list="false" :auto-upload="false"
                               :http-request="upload" :on-change="onChange">
                        <img v-if="head_pic" :src="head_pic" class="avatar">
                        <i v-else class="el-icon-plus avatar-uploader-icon avatar"></i>
                    </el-upload>
                </el-form-item>
                <el-form-item label="出生日期" prop="birthday">
                    <el-col :span="11">
                        <el-date-picker type="date" placeholder="选择日期" v-model="formSubmit.birthday" style="width: 100%;"></el-date-picker>
                    </el-col>
                </el-form-item>
                <el-form-item label="手机号码" prop="phone">
                    <el-input type="tel" v-model="formSubmit.phone"></el-input>
                </el-form-item>
                <el-form-item label="性别" prop="sex">
                    <el-radio-group v-model="formSubmit.sex">
                        <el-radio label="男"></el-radio>
                        <el-radio label="女"></el-radio>
                    </el-radio-group>
                </el-form-item>
                <el-form-item label="邮箱" prop="email">
                    <el-input type="email" v-model="formSubmit.email"></el-input>
                </el-form-item>
                <el-form-item label="描述" prop="description">
                    <el-input type="textarea" v-model="formSubmit.description" value="这个人很懒,什么也没留下!"></el-input>
                </el-form-item>
                <el-form-item label="密码" prop="password">
                    <el-input type="password" v-model="formSubmit.password"></el-input>
                </el-form-item>
                <el-form-item label="确认密码" prop="enter_password">
                    <el-input type="password" v-model="formSubmit.enter_password"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" @@click="submitFormEvent('formSubmit')">{{dialog.submitText}}</el-button>
                    <el-button @@click="resetFormEvent('formSubmit')">{{dialog.resetText}}</el-button>
                </el-form-item>
            </el-form>
            @*<span slot="footer" class="dialog-footer">
                    <el-button @@click="dialogVisible = false">取 消</el-button>
                    <el-button type="primary" @@click="dialogVisible = false">确 定</el-button>
                </span>*@
        </el-dialog>
        <!-- 结束 添加 修改 -->

    </div>
    <!-- import Vue before Element -->
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <!-- import JavaScript -->
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="/js/js.cookie.js"></script>
    <script src="/js/index.js"></script>
    <script>
        var obj = new Gibson();
        obj.el = ".admin_list";
        obj.data.controller = "admin";
        obj.data.isOperatorRequest = true;
        obj.data.operatorUrl = { add: urls.admin.add, modify: urls.admin.edit, delete: urls.admin.delete, query: urls.admin.query };
        obj.data.formQuery = { id: '', token: '', account: '', nick_name: '', birthday_date: [], role_id: '', real_name: '', phone: '', sex: '', email: '', login_date: [], create_date: [], update_date: [] };
        obj.data.submit_url = obj.data.baseUrl+'file/upload';
        obj.data.account_disabled = false;
        obj.data.old_pwd = '';
        obj.data.required_role = true;
        obj.data.head_pic = '';
        obj.data.fileInfo = null;
        obj.data.head_pic_name = '';
        obj.data.formSubmit = {
            id: '', account: '', nick_name: '', role: { id: '' }, real_name: '', birthday: '', phone: '', sex: '', admin_pic: { file_id: '' }, email: '', description: '这个人很懒,什么也没留下!', password: '', enter_password: ''
        };
        obj.data.formRoleValidator = {
            account: [
                { required: true, message: '请输入账户', trigger: 'blur' },
                { min: 5, max: 15, message: '长度在 5 到 15 个字符账户', trigger: 'blur' }
            ],
            nick_name: [
                { required: true, message: '请输入昵称', trigger: 'blur' },
                { min: 2, max: 10, message: '长度在 2 到 10 个字符昵称', trigger: 'blur' }
            ],
            role: {
                id: {
                    validator: (rule, value, callback) => {
                        if (obj.data.required_role) {
                            if (!value) {
                                callback(new Error('请选择角色'));
                            } else {
                                callback();
                            }
                        } else {
                            callback();
                        }
                    }, trigger: 'blur'
                }
            },
            real_name: [
                { required: true, message: '请输入姓名', trigger: 'blur' },
                { min: 2, max: 10, message: '长度在 2 到 10 个字符姓名', trigger: 'blur' }
            ],
            user_file: {
                id: [
                    { required: true, message: '请上传头像', trigger: 'change' }
                ]
            },
            //https://blog.csdn.net/weixin_39897287/article/details/94442776
            birthday: { /*type: 'date',*/ required: true, message: '请选择日期', trigger: 'change' },
            phone: [
                { required: true, message: '请输入手机号', trigger: 'blur' },
                { min: 11, max: 11, message: '长度在 11 个数字手机号', trigger: 'blur' }
            ],
            sex: { required: true, message: '请选择性别', trigger: 'change' },
            email: [
                { required: true, type: 'email', message: '请输入邮箱', trigger: 'blur' },
                { min: 10, max: 20, message: '长度在 10 到 20 个字符邮箱', trigger: 'blur' }
            ],
            description: [
                { required: true, message: '请输入描述', trigger: 'blur' },
                { min: 10, max: 500, message: '长度在 10 到 500 个字符描述', trigger: 'blur' }
            ],
            password: [
                //{ required: true,  message: '请输入密码', trigger: 'blur' },
                // { min: 6, max: 20, message: '长度在 6 到 20 个字符密码', trigger: 'blur' }
                {
                    validator: (rule, value, callback) => {
                        if (!value) {
                            callback(new Error('请输入密码'));
                        }
                        else if (obj.data.old_pwd != value && (value.length < 6 || value.length > 20)) {
                            callback(new Error('长度在 6 到 20 个字符'));
                        }
                        else if (value.length < 6) {
                            callback(new Error('长度在 6 个字符以上'));
                        } else {
                            callback();
                        }
                    }, trigger: 'blur'
                }
            ],
            enter_password: [
                {
                    validator: (rule, value, callback) => {
                        if (!value) {
                            callback(new Error('请输入确认密码'));
                        }
                        else if (obj.data.old_pwd != value && (value.length < 6 || value.length > 20)) {
                            callback(new Error('长度在 6 到 20 个字符'));
                        }
                        else if (value.length < 6) {
                            callback(new Error('长度在 6 个字符以上'));
                        }
                        else if (obj.data.formSubmit.password !== value) {
                            callback(new Error('两次输入密码不一致!'));
                        } else {
                            callback();
                        }
                    }, trigger: 'blur'
                }
            ]
        };
        // 表单查询时 时间需要转换
        obj.methods.queryTimeField = function () {
            if (this.request_content_type != 1) {
                // 时间转换
                return ["create_date", "update_date", "birthday_date", "login_date"];
            }
            return [];
        };
        obj.methods.reload = function () {
            this.queryCategoryEvent();
        };
        //提交表单事件 添加或编辑按钮提交事件
        obj.methods.submitFormEvent = function (formName) {
            this.$refs[formName].validate((valid) => {
                if (valid) {
                    this.upload(this.fileInfo);
                    //var img = this.head_pic;
                    //var image = new Image();
                    //image.crossOrigin="anonymous"; //关键
                    //image.src = img;
                    //var $this = this;
                    //image.onload = function () {
                    //    var base64 = getBase64Image(image);
                    //    var file =dataURLtoFile(base64,$this.head_pic_name);
                    //    $this.upload(file);
                    //}
                    return true;
                }
                else {
                    console.log('error submit!!');
                    return false;
                }
            });
        };
        //自定义上传操作
        obj.methods.upload = function (file) {
            var paramOptions = parseRequestParam(3, this.formSubmit, undefined, ["birthday"]);
            if (file) {
                paramOptions.parem.append("head_pic", file.raw ? file.raw : file.file ? file.file : file);
                this.fileInfo = null;
            }
            var $this = this;
            post(this.submit_url, paramOptions.parem, paramOptions.contenType, response => {
                $this.dialog.visible = false;
                if (response.data.success) {
                    $this.$nextTick(() => {
                        $this.dialog.visible = false;
                        $this.loadTableDataOrQueryDataEvent(); // 重新加载列表数据
                        $this.reload();
                    });
                }
            }, (response) => { $this.tip(response.data.message, "提示：", "确定", "info", "确定!", "关闭!"); });
        };
        //覆盖此方法 重写
        obj.methods.loadMounted = function () {
            this.roleQueryEvent();
            this.queryCategoryEvent();
            var $this = this;
            get(urls.admin.role_required, function (response) { $this.required_role = response.data.data; });
        };
        obj.methods.onChange = function (file, fileList) {
            var $this = this;
            this.fileInfo = file;
            this.head_pic_name = file.name;
            if (window.createObjectURL != undefined) {
                $this.head_pic = window.createObjectURL(file.raw);
            }
            else if (window.URL != undefined) {
                $this.head_pic = window.URL.createObjectURL(file.raw);
            }
            else if (window.webkitURL != undefined) {
                $this.head_pic = window.webkitURL.createObjectURL(file.raw);
            }
        };
        //角色分类
        setRoleCategory(obj);
        //覆盖此方法 重写
        obj.methods.submitTextSelectChanngeEevent = function () {
            this.dialog.title = "查看管理员信息";
            this.dialog.submitText = "预览管理员信息";
            this.disabled = true;
            this.head_pic = '';
        };
        //覆盖此方法 重写
        obj.methods.submitTextModifyChanngeEevent = function () {
            this.dialog.title = "编辑管理员信息";
            this.dialog.submitText = "立即编辑";
            this.submit_url = urls.admin.edit;
            this.disabled = false;
            this.account_disabled = true;
            this.head_pic = '';
        };
        //覆盖此方法 重写
        obj.methods.submitTextInsertChanngeEevent = function () {
            this.dialog.title = "添加管理员信息";
            this.dialog.submitText = "立即创建";
            this.submit_url = urls.admin.add;
            this.old_pwd = '';
            this.head_pic = '';
            this.disabled = false;
            this.account_disabled = false;
        };
        //覆盖此方法 重写
        obj.methods.setValue = function (row) {
            for (var obj in this.formSubmit) {
                if (obj.toString() == 'role' && row.role) {
                    this.formSubmit[obj].id = row.role.id;
                    continue;
                }
                else if (row[obj]) this.formSubmit[obj] = row[obj];
            }
            if (row.head_pic) {
                this.head_pic = this.baseUrl+'img/' + row.head_pic;
                this.formSubmit.admin_pic.file_id = row.head_pic;
            }
            this.formSubmit.enter_password = this.formSubmit["password"];
            this.old_pwd = this.formSubmit["password"];
        };

        new Vue(obj);
    </script>
</body>
</html>
