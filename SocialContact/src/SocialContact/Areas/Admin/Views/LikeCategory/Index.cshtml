<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link rel="icon" href="/favicon.ico">
    <title>爱好分类列表</title>
    <!-- 引入样式 -->
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <style>
        .demo-form-inline {
            margin: 0px 70px;
            text-align: left;
        }
    </style>
</head>
<body>
    <div class="like_category_list">

        <!-- 开始查询信息 -->
        <el-form :inline="true" :model="formQuery" ref="formQuery" class="demo-form-inline ">
            <el-form-item label="爱好分类" prop="id">
                <el-select v-model="formQuery.id" placeholder="请选择" @@change="handleCategoryQueryChangeEvent" clearable @@visible-change="handleCategoryQueryVisableChangeEvent">
                    <el-option v-for="it in options" :key="it.id" :label="it.category" :value="it.id">
                    </el-option>
                </el-select>
            </el-form-item>
            <el-form-item label="爱好名称" prop="category">
                <el-input v-model="formQuery.category" placeholder="爱好名称"></el-input>
            </el-form-item>
            <el-form-item label="创建时间范围" prop="create_date">
                <el-date-picker v-model="formQuery.create_date" type="datetimerange" value-format="yyyy-MM-dd HH:mm:ss" :picker-options="createDatePickerOptions"
                                range-separator="至" start-placeholder="开始日期" align="right">
                </el-date-picker>
            </el-form-item>
            <el-form-item label="修改时间范围" prop="update_date">
                <el-date-picker v-model="formQuery.update_date" type="datetimerange" value-format="yyyy-MM-dd HH:mm:ss" :picker-options="createDatePickerOptions" range-separator="至" start-placeholder="开始日期"
                                end-placeholder="结束日期" align="right">
                </el-date-picker>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" @@click="loadTableDataOrQueryDataEvent">查询</el-button>
                <el-button @@click="resetFormEvent('formQuery')">重置</el-button>
            </el-form-item>
        </el-form>
        <!-- 结束查询信息 -->
        <!-- 开始 操作按钮 -->
        <div style="margin-top: 20px;text-align:left;margin-bottom:10px">
            <el-button @@click="toggleSelectionTableCheckBoxButtonEvent(checkboxAllSelect?tableData:null)">{{checkboxAllSelectText}}</el-button>
            <el-button @@click="insertButtonClickEvent" v-if="operator.add" icon="el-icon-plus">添加</el-button>
            <el-button @@click="modifyButtonClickEvent" v-if="operator.modify" icon="el-icon-edit">编辑</el-button>
            <el-button @@click="deleteButtonClickEvent" v-if="operator.delete" icon="el-icon-delete">删除</el-button>
            <el-button @@click="queryButtonClickEvent" icon="el-icon-view">查看</el-button>
            <el-button @@click="loadTableDataOrQueryDataEvent" icon="el-icon-refresh">刷新</el-button>
        </div>
        <!-- 结束 操作按钮 -->
        <!-- 开始 列表信息 -->
        <el-table v-loading="loading" element-loading-spinner="el-icon-loading" element-loading-background="rgba(0, 0, 0, 0.8)" ref="multipleTable" :data="tableData" tooltip-effect="dark"
                  highlight-current-row border @@selection-change="handleSelectionChange" :default-sort="{prop: 'create_date', order: 'descending'}">
            <el-table-column type="selection" width="55" align="center"> </el-table-column>

            <el-table-column type="index" width="50" sortable label="序号" align="center"> </el-table-column>
            <el-table-column prop="id" label="编号" sortable width="70" align="center">  </el-table-column>
            <el-table-column prop="category" label="名称" width="100" align="center"> </el-table-column>
            <el-table-column prop="description" label="描述" width="200" align="center"> </el-table-column>
            <el-table-column prop="create_date" label="创建日期" sortable width="200" align="center"> </el-table-column>
            <el-table-column prop="update_date" label="修改日期" sortable width="200" align="center"> </el-table-column>
            <el-table-column label="操作" width="200" align="center">
                <template slot-scope="scope">
                    <el-button @@click="handleSelectClickEvent(scope.row)" type="text" icon="el-icon-view" size="small">查看</el-button>
                    <el-button type="text" @@click="handleModifyClickEvent(scope.row)" v-if="operator.modify" icon="el-icon-edit" size="small">编辑</el-button>
                    <el-button type="text" @@click="handleDeleteClickEvent(scope.row)" v-if="operator.delete" icon="el-icon-delete" size="small">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
        <!-- 结束 列表信息 -->
        <!-- 开始 分页 -->
        <div class="block" style="text-align:center;">
            <el-pagination background @@size-change="handleSizeChangeEvent" @@current-change="handleCurrentPageChangeEvent" :current-page="page.current_page"
                           :page-sizes="page.sizes" :page-size="page.size" :page-count="page.page" layout="total, sizes, prev, pager, next, jumper" :total="page.total">
            </el-pagination>
        </div>
        <!-- 结束 分页 -->
        <!-- 开始 添加 修改 -->
        <el-dialog :title="dialog.title" :visible.sync="dialog.visible" width="30%" :before-close="handleDialogClose">
            <el-radio-group v-model="labelPosition" size="small">
                <el-radio-button label="left">左对齐</el-radio-button>
                <el-radio-button label="right">右对齐</el-radio-button>
                <el-radio-button label="top">顶部对齐</el-radio-button>
            </el-radio-group>
            <div style="margin: 20px;"></div>
            <el-form :model="formSubmit" status-icon :rules="formRoleValidator" :disabled="disabled" ref="formSubmit" class="demo-ruleForm" :label-position="labelPosition" label-width="80px">
                <el-input type="hidden" v-model="formSubmit.id"></el-input>
                <el-form-item label="爱好名称" prop="category">
                    <el-input v-model="formSubmit.category"></el-input>
                </el-form-item>
                <template v-if="test">
                    <el-form-item label="管理员" prop="admin.id">
                        <el-select v-model="formSubmit.admin.id" filterable placeholder="请选择" @@change="handleAdminChangeEvent" @@visible-change="handleAdminVisableChangeEvent">
                            <el-option v-for="item in admin_options" :key="item.id"
                                       :label="item.category" :value="item.id">
                            </el-option>
                        </el-select>
                    </el-form-item>
                </template>
                <!--改方式无法验证下拉选框值改变验证 提交时验证可以通过 -->
                @*<el-form-item label="爱好分类" prop="parent.id">
                        <el-cascader v-model="formSubmit.parent.id" placeholder="爱好分类" ref="refHandleForm"
                                     :options="parent_options" change-on-select :show-all-levels="false" filterable
                                     :props="{  checkStrictly: true,expandTrigger: 'hover' }"
                                     @@change="handleFormCategoryChangeEvent" @@visible-change="handleCategoryDownVisibleChangeEvent" @@blur="handleFormCategoryBlurEvent" :clearable="true">

                            <template slot-scope="{ node, data }">
                                <span style="float: left" @@click="handleFormCategoryClickEvent(data.value)">{{ data.label }}</span>
                                <span v-if="!node.isLeaf"> ({{ data.children.length }}) </span>
                            </template>
                        </el-cascader>
                    </el-form-item>*@
                <el-form-item label="描述" prop="description">
                    <el-input type="textarea" v-model="formSubmit.description" value="这个人很懒,什么也没留下!"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" @@click="submitFormEvent('formSubmit')">{{dialog.submitText}}</el-button>
                    <el-button @@click="resetFormEvent('formSubmit')">{{dialog.resetText}}</el-button>
                </el-form-item>
            </el-form>
        </el-dialog>
        <!-- 结束 添加 修改 -->

    </div>
    <!-- import Vue before Element -->
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <!-- import JavaScript -->
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="/js/js.cookie.js"></script>
    <script src="/js/index.js"></script>
    <script>
        var obj = new Gibson();
        obj.el = ".like_category_list";
        obj.data.operatorUrl = { add: urls.likecategory.add, modify: urls.likecategory.edit, delete: urls.likecategory.delete, query: urls.likecategory.query };
        obj.data.formQuery = { id: '', category: '', create_date: [], update_date: [] };
        obj.data.formSubmit = { id: '', category: '', description: '这个人很懒,什么也没留下!' };
        obj.data.controller = "likecategory";
        obj.data.options = [];
        obj.data.isOperatorRequest = true;
        obj.data.formRoleValidator = {
            category: [
                { required: true, message: '请输入爱好分类名称', trigger: 'blur' },
                { min: 2, max: 10, message: '长度在 2 到 10 个字符爱好分类名称', trigger: 'blur' }
            ],
            description: [
                { required: true, message: '请输入描述', trigger: 'blur' },
                { min: 10, max: 500, message: '长度在 10 到 500 个字符描述', trigger: 'blur' }
            ]
        };
        //覆盖此方法 重写
        obj.methods.loadMounted = function () {
            this.queryCategoryEvent();
            if (this.test) this.adminCategoryQueryEvent();
        };
        obj.methods.reload = function () {
            this.queryCategoryEvent();
        };
        //测试用的
        setAdmin(obj);
        //覆盖此方法 重写
        obj.methods.submitTextSelectChanngeEevent = function () {
            this.dialog.title = "查看爱好分类信息";
            this.disabled = true;
            this.dialog.submitText = "预览爱好分类信息";
        };
        //覆盖此方法 重写
        obj.methods.submitTextModifyChanngeEevent = function () {
            this.dialog.title = "编辑爱好分类信息";
            this.disabled = false;
            this.dialog.submitText = "立即编辑";
        };
        //覆盖此方法 重写
        obj.methods.submitTextInsertChanngeEevent = function () {
            this.dialog.title = "添加爱好分类信息";
            this.disabled = false;
            this.dialog.submitText = "立即创建";
        };
        //覆盖此方法 重写
        obj.methods.setValue = function (row) {
            for (var obj in this.formSubmit) {
                let str = obj.toString();
                if (str == 'admin' || str == "parent") {
                    continue;
                }
                if (row[obj]) this.formSubmit[obj] = row[obj];
            }
            if (this.test && row.admin) this.formSubmit.admin.id = row.admin.id;
        };
        new Vue(obj);
    </script>

</body>
</html>
