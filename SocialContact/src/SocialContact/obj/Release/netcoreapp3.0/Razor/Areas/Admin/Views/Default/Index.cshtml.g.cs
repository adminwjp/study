#pragma checksum "E:\work\program\SocialContact\src\SocialContact\Areas\Admin\Views\Default\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "73604342d54d36464c8ef9854640e0c69e3cafee"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Default_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Default/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"73604342d54d36464c8ef9854640e0c69e3cafee", @"/Areas/Admin/Views/Default/Index.cshtml")]
    public class Areas_Admin_Views_Default_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "73604342d54d36464c8ef9854640e0c69e3cafee2774", async() => {
                WriteLiteral(@"
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge,chrome=1"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"">
    <link rel=""icon"" href=""/favicon.ico"">
    <title>首页</title>
    <!-- 引入样式 -->
    <link rel=""stylesheet"" href=""https://unpkg.com/element-ui/lib/theme-chalk/index.css"">
    <style>
        *{
            margin:0;
            padding:0;
        }
        .el-header {
            background-color: #B3C0D1;
            color: #333;
            line-height: 56px;
        }
        .hamburger {
            display: inline-block;
            vertical-align: middle;
            width: 20px;
            height: 20px;
        }

            .hamburger.is-active {
                transform: rotate(180deg);
            }

        .el-aside {
            transition: 0.3s;
            width: 200px;
        }

        .hideSidebar {
            transition: 0.3s;
            width: 64p");
                WriteLiteral(@"x;
        } 
        .el-aside, .hideSidebar{
            color: #333;  
            min-height: 400px;
            background-color: rgb(238, 241, 246);
            overflow: hidden;
           }
           .el-menu-vertical-demo{
              background-color: rgb(238, 241, 246);
           }
        .el-menu-vertical-demo:not(.el-menu--collapse) {
            width: 200px;
            min-height: 400px;
            height: 100%;
        }
        <!-- 组件 用div 包裹  样式需要重写-->
        .el-menu--collapse > div > .el-menu-item span, .el-menu--collapse > div > .el-submenu > .el-submenu__title span {
            height: 0;
            width: 0;
            overflow: hidden;
            visibility: hidden;
            display: inline-block;
        }
        .el-menu--collapse > div> .el-menu-item .el-submenu__icon-arrow, .el-menu--collapse> div > .el-submenu > .el-submenu__title .el-submenu__icon-arrow {
            display: none;
        }
        #right_context{
            position");
                WriteLiteral(":absolute;\r\n            /*opacity:0.5;*/\r\n            width:80px;\r\n            text-align:center;\r\n            z-index:999;\r\n            background-color:#B3C0D1;\r\n            top:0;\r\n            left:0;\r\n        }\r\n    </style>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "73604342d54d36464c8ef9854640e0c69e3cafee6124", async() => {
                WriteLiteral(@"

    <div id=""app"" v-loading.fullscreen.lock=""fullscreenLoading"">
        <el-container style=""height: 100%;min-height: 100%;border: 1px solid #eee"">
            <div :class=""isActive?'el-aside':'hideSidebar'"">
                <el-menu class=""el-menu-vertical-demo"" :default-openeds=""openeds"" :collapse=""!isActive""
                         ");
                WriteLiteral(@"@select=""menuSelectChange"">
                    <slidermenu v-if=""menus&&menus.length>0"" :menu_list=""this.menus"" />
                </el-menu>
            </div>
            <el-container>
                <el-header style=""height:56px;"">
                    <div style=""float: left; width: 100px; padding: 0 15px;"" ");
                WriteLiteral(@"@click=""toggleClick"">
                        <svg :class=""{'is-active':isActive}"" class=""hamburger"" viewBox=""0 0 1024 1024"" xmlns=""http://www.w3.org/2000/svg"" width=""64"" height=""64"">
                            <path d=""M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM142.4 642.1L298.7 519a8.84 8.84 0 0 0 0-13.9L142.4 381.9c-5.8-4.6-14.4-.5-14.4 6.9v246.3a8.9 8.9 0 0 0 14.4 7z"" />
                        </svg>
                    </div>
                    <div style=""float: right;width: 200px; text-align: right;font-size: 12px;"">
                        <el-dropdown ");
                WriteLiteral(@"@click=""userClick"">
                            <i class=""el-icon-setting"" style=""margin-right: 15px""></i>
                            <el-dropdown-menu slot=""dropdown"">
                                <el-dropdown-item>查看</el-dropdown-item>
                                <el-dropdown-item>新增</el-dropdown-item>
                                <el-dropdown-item>删除</el-dropdown-item>
                            </el-dropdown-menu>
                        </el-dropdown>
                        <span><i class=""el-icon-caret-bottom"" ");
                WriteLiteral("@click=\"userClick\"></i></span>\r\n                    </div>\r\n                </el-header>\r\n\r\n                <el-main>\r\n                    <el-tabs v-model=\"activeName\" closable ");
                WriteLiteral("@tab-remove=\"handleTableRemove\" ");
                WriteLiteral("@tab-add=\"handleTableAdd\" ");
                WriteLiteral("@tab-click=\"handleTableClick\">\r\n");
                WriteLiteral("                        <el-tab-pane v-for=\"(item, index) in tabs\" :key=\"item.name\" :label=\"item.title\" :name=\"item.id\">\r\n                            <span slot=\"label\" ");
                WriteLiteral(@"@contextmenu.prevent=""closeCick"">
                                <i :class=""item.style"" style=""padding-right:5px;""></i>{{item.title}}
                            </span>
                            <iframe :src=""'/admin'+item.href"" :id=""item.id"" :name=""item.id"" scrolling=""no"" width=""100%"" frameborder=""0"" height=""100%""></iframe>
                        </el-tab-pane>
                    </el-tabs>
                </el-main>
            </el-container>
        </el-container>
        <div id=""right_context"" style=""display:none"" >
            <div> <el-button type=""primary"" ");
                WriteLiteral("@click=\"closeCurrent\">关闭当前</el-button></div>\r\n            <div><el-button type=\"primary\" ");
                WriteLiteral(@"@click=""closeAll"">关闭所有</el-button></div>
        </div>
    </div>
    
    <noscript>JavaScript浏览器未启用!</noscript>
    <!-- import Vue before Element -->
    <script src=""https://unpkg.com/vue/dist/vue.js""></script>

    <!-- import JavaScript -->
    <script src=""https://unpkg.com/element-ui/lib/index.js""></script>
    <script src=""https://unpkg.com/axios/dist/axios.min.js""></script>
    <script src=""/js/js.cookie.js""></script>
    <script src=""/js/index.js""></script>
    <script type=""text/x-template"" id=""menu-template"">
        <div>
            <template v-for=""item in menu_list"">
                <el-menu-item v-if=""!item.children||item.children.length==0"" :key=""item.index"" :index=""item.label+','+item.style+','+item.href"">
                    <i v-if=""item.style"" :class=""item.style""></i>
                    <span slot=""title"">{{ item.label}}</span>
                </el-menu-item>
                <el-submenu v-else :key=""item.index"" :index=""item.label+''"">
                    <template");
                WriteLiteral(@" slot=""title"">
                        <i v-if=""item.style"" :class=""item.style""></i>
                        <span slot=""title"">{{ item.label}}</span>
                    </template>
                    <el-menu-item-group v-if=""item.group"">
                        <span slot=""title"">{{ item.group}}</span>
                    </el-menu-item-group>
                    <slidermenu :menu_list=""item.children"" />
                </el-submenu>
            </template>
        </div>

    </script>

    <script>
        Vue.component(""slidermenu"", {
            template: '#menu-template',
            props: {
                menu_list: {
                    type: Array
                }
            }
        });
       
        // 定义一个函数，定时调用并刷新iframe高度
        function reinitIframe(id) {
            var iframe = document.getElementById(id);
            try {
                var bHeight = iframe.contentWindow.document.body.scrollHeight;
                var dHeight = iframe.contentWindow.d");
                WriteLiteral(@"ocument.documentElement.scrollHeight;
                var height = Math.max(bHeight, dHeight);
                iframe.height = height;
            } catch (ex) { }
        }
        //完毕后干掉定时器
        function IframeLoadEND(id, timer) {
            var iframe = document.getElementById(id);
            try {
                window.clearInterval(timer);
                reinitIframe(id);
            } catch (ex) { }
            // 停止定时
            window.clearInterval(timer);
        }
        var body = {
            data: function () {
                return {
                    openeds: [],
                    menus: [],
                    fullscreenLoading: true,
                    isActive: true,
                    activeName: '',
                    tabs: [],
                    tabIndex: 0,
                    visible: {}
                }
            },
            computed: {
            },
            watch: {
            },
            beforeMount() {
            }");
                WriteLiteral(@",
            beforeDestroy() {
            },
            mounted() {
                this.menuCategory();
            },
            methods: {
                closeCick: function (val) {
                    //console.log(val);
                   // console.log(val.path[1].id);
                    this.activeName = val.path[1].id.replace(""tab-"", """");
                    //var id = ""div#"" + val.path[1].id;
                    //没办法定位  定位话需要多次 在相对定位内绝对定位 麻烦 
                    document.querySelector(""div#right_context"").style.display = ""block"";
                    document.querySelector(""div#right_context"").style.top = // (document.querySelector(id).clientTop + document.querySelector(id).clientHeight) + ""px"";
                    (val.clientY+20)+""px"";
                    document.querySelector(""div#right_context"").style.left =//( document.querySelector(id).clientLeft + (document.querySelector(id).clientWidth - 64) / 2) + ""px"";
                        val.clientX + ""px"";
                    ");
                WriteLiteral(@"//显示后才有效
                    document.querySelector(""div#right_context"").blur = rightBlur;
                    document.querySelector(""div#right_context"").onmouseleave = function () {
                        console.log(14);
                        document.querySelector(""div#right_context"").style.display = ""none"";
                    };
                    document.querySelector(""div#right_context"").onmouseleave = rightFocus;
                    function rightBlur() {
                        console.log(12);
                        document.querySelector(""div#right_context"").style.display = ""none"";
                    }
                    function rightFocus() {
                        //console.log(13);
                        document.querySelector(""div#right_context"").style.display = ""none"";
                    }
                },
                closeCurrent: function (val) {
                    console.log(val);
                    this.handleTableRemove(this.activeName);
          ");
                WriteLiteral(@"          document.querySelector(""div#right_context"").style.display = ""none"";
                },
                closeAll: function () {
                    this.tabs = [];
                    document.querySelector(""div#right_context"").style.display = ""none"";
                },
                /**
               * iframe-宽高自适应显示
               */
                changeTabfIframe: function () {
                    if (!this.activeName) return;
                    const tab = document.getElementById(this.activeName);
                    const deviceWidth = document.body.clientWidth;
                    const deviceHeight = document.body.clientHeight;
                    var timer = window.setInterval(""reinitIframe('"" + this.activeName + ""')"", 500); //定时调用开始
                    IframeLoadEND(timer);
                    //tab.style.width = (Number(deviceWidth) - 120 - (this.isActive?200:64)) + 'px'; //数字是页面布局宽度差值
                    //tab.style.height = (Number(deviceHeight) - 80-56) + 'px'; //数");
                WriteLiteral(@"字是页面布局高度差
                },
                handleTableRemove: function (val) {
                    console.log(val);
                    this.clostTab(val);
                },
                handleTableAdd: function (val) {

                },
                //菜单点击事件
                menuSelectChange: function (index, indexPath) {
                    console.log(index + '  ' + indexPath);
                    var strs = indexPath.toString().split(',');
                    var title = strs[strs.length - 3];
                    var icon = strs[strs.length - 2];
                    var href = index.toString().split(',')[2];
                    href = !href.startsWith(""/"") ? ""/"" + href : href;
                    href = href.indexOf(""index"") > -1 ? href : href.endWith(""/"") ? href + ""index"" : href + ""/index"";
                    for (var item in this.tabs) {
                        if (this.tabs[item].href == href) {
                            this.activeName = href.split('/')[1];
         ");
                WriteLiteral(@"                   document.getElementById(this.activeName).contentWindow.location.reload(true);//重新加载
                            return;
                        }
                    }
                    let newTabName = ++this.tabIndex + '';

                    this.activeName = id = href.split('/')[1];
                    this.tabs.push({ style: icon, title: title, href: href, id: this.activeName, name: newTabName });
                    var $this = this;
                    this.$nextTick(() => {
                        $this.changeTabfIframe();
                        window.onresize = null;
                        window.onresize = function () {
                            $this.changeTabfIframe();
                        };
                    });
                },
                clostTab: function (val) {
                    for (var i = 0; i < this.tabs.length; i++) {
                        if (this.tabs[i].id === val) {
                            this.$nextTick(() => {
  ");
                WriteLiteral(@"                              this.tabs.splice(i, 1);
                            });
                            break;
                        }
                    }
                },
                //tab处理
                handleTableClick: function (tab, event) {
                    //console.log(tab+'  '+ event);
                    //var $this = this;
                    //this.$nextTick(() => {
                    //    $this.changeTabfIframe();
                    //    window.onresize = null;
                    //    window.onresize = function () {
                    //        $this.changeTabfIframe();
                    //    };
                    //});
                },
                userClick: function () {

                },
                toggleClick: function () {
                    this.isActive = !this.isActive;
                },
                queryNavbar: function () {

                },
                //菜单信息
                menuCategory: function");
                WriteLiteral(@" () {
                    var $this = this;
                    get(urls.menu.category, response => {
                        $this.menus = response.data.data;
                        $this.$nextTick(() => {
                            if (this.menus && this.menus.length > 0) {
                                setTimeout(() => {
                                    this.fullscreenLoading = false;
                                }, 500);
                            }
                        });
                    });
                },
            }
        };
        var ctor = Vue.extend(body);
        new ctor().$mount(""#app"");
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n </html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
